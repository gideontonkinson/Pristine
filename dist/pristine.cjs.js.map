{
  "version": 3,
  "sources": ["../src/pristine.js", "../src/lang.js", "../src/utils.js"],
  "sourcesContent": ["import { lang } from './lang';\nimport { tmpl, findAncestor, groupedElemCount, mergeConfig } from './utils';\n\nlet defaultConfig = {\n  classTo: 'form-group',\n  errorClass: 'has-danger',\n  successClass: 'has-success',\n  errorTextParent: 'form-group',\n  errorTextTag: 'div',\n  errorTextClass: 'text-help',\n};\n\nconst PRISTINE_ERROR = 'pristine-error';\nconst SELECTOR = \"input:not([type^=hidden]):not([type^=submit]), select, textarea\";\nconst ALLOWED_ATTRIBUTES = new Set([\"required\", \"min\", \"max\", \"minlength\", \"maxlength\", \"pattern\"]);\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst MESSAGE_REGEX = /-message(?:-([a-z]{2}(?:_[A-Z]{2})?))?/; // matches, -message, -message-en, -message-en_US\nlet currentLocale = 'en';\nconst validators = {};\n\nconst _ = function(name, validator) {\n  validator.name = name;\n  if (validator.priority === undefined)\n    validator.priority = 1;\n  validators[name] = validator;\n};\n\n_('text', { fn: (val) => true, priority: 0 });\n_('required', { fn: function(val) { return (this.type === 'radio' || this.type === 'checkbox') ? groupedElemCount(this) : val !== undefined && val.trim() !== '' }, priority: 99, halt: true });\n_('email', { fn: (val) => !val || EMAIL_REGEX.test(val) });\n_('number', { fn: (val) => !val || !isNaN(parseFloat(val)), priority: 2 });\n_('integer', { fn: (val) => !val || /^\\d+$/.test(val) });\n_('minlength', { fn: (val, length) => !val || val.length >= parseInt(length) });\n_('maxlength', { fn: (val, length) => !val || val.length <= parseInt(length) });\n_('min', { fn: function(val, limit) { return !val || (this.type === 'checkbox' ? groupedElemCount(this) >= parseInt(limit) : parseFloat(val) >= parseFloat(limit)); } });\n_('max', { fn: function(val, limit) { return !val || (this.type === 'checkbox' ? groupedElemCount(this) <= parseInt(limit) : parseFloat(val) <= parseFloat(limit)); } });\n_('pattern', { fn: (val, pattern) => { let m = pattern.match(new RegExp('^/(.*?)/([gimy]*)$')); return !val || (new RegExp(m[1], m[2])).test(val); } });\n_('equals', { fn: (val, otherFieldSelector) => { let other = document.querySelector(otherFieldSelector); return (other) && ((!val && !other.value) || (other.value === val)); } });\n\nexport default function Pristine(form, config, live) {\n\n  let self = this;\n\n  init(form, config, live);\n\n  function init(form, config, live) {\n\n    form.setAttribute(\"novalidate\", \"true\");\n\n    self.form = form;\n    self.config = mergeConfig(config || {}, defaultConfig);\n    if (live === \"live\") {\n      self.live = \"live\";\n    } else if (live === \"blur\") {\n      self.live = \"blur\";\n    } else if (live === \"hybrid\") {\n      self.live = \"hybrid\"\n    } else {\n      self.live = \"off\"\n    }\n    self.fields = Array.from(form.querySelectorAll(SELECTOR)).map(function(input) {\n\n      let fns = [];\n      let params = {};\n      let messages = {};\n      let overlappingAttributes = new Set();\n\n      // Check for overlapping attributes and prefer the pristine\n      [].forEach.call(input.attributes, function(attr) {\n        if (/^data-pristine-/.test(attr.name)) {\n          let name = attr.name.substr(14);\n          if (ALLOWED_ATTRIBUTES.has(name)) {\n            overlappingAttributes.add(name)\n          } else if (name === 'type') {\n            overlappingAttributes.add(attr.value)\n          }\n        }\n      });\n\n\n      [].forEach.call(input.attributes, function(attr) {\n        if (/^data-pristine-/.test(attr.name)) {\n          let name = attr.name.substr(14);\n          let messageMatch = name.match(MESSAGE_REGEX);\n          if (messageMatch !== null) {\n            let locale = messageMatch[1] === undefined ? 'en' : messageMatch[1];\n            if (!messages.hasOwnProperty(locale))\n              messages[locale] = {};\n            messages[locale][name.slice(0, name.length - messageMatch[0].length)] = attr.value;\n            return;\n          }\n          if (name === 'type') name = attr.value;\n          _addValidatorToField(fns, params, name, attr.value);\n        } else if (ALLOWED_ATTRIBUTES.has(attr.name) && !overlappingAttributes.has(attr.name)) {\n          _addValidatorToField(fns, params, attr.name, attr.value);\n        } else if (attr.name === 'type' && !overlappingAttributes.has(attr.value)) {\n          _addValidatorToField(fns, params, attr.value);\n        }\n      });\n\n      fns.sort((a, b) => b.priority - a.priority);\n\n\n\n      if (self.live === 'live') {\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change'), function(e) {\n          self.validate(e.target);\n        }.bind(self));\n      } else if (self.live === 'blur') {\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'blur' : 'change'), function(e) {\n          self.validate(e.target);\n        }.bind(self));\n      } else if (self.live === 'hybrid') {\n        let touched = false\n        const defaultValue = input.value\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'blur' : 'change'), function(e) {\n          touched = true\n          self.validate(e.target);\n        }.bind(self));\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change'), function(e) {\n          if (touched) {\n            self.validate(e.target);\n          }\n        }.bind(self));\n        input.addEventListener('input', function() {\n          const changed = type === 'checkbox' || type === 'radio'\n            ? input.checked !== defaultChecked\n            : input.value !== defaultValue\n\n          if (changed && !touched) {\n            touched = true\n            self.validate(input)\n          }\n        })\n      }\n\n      return input.pristine = { input, validators: fns, params, messages, self };\n\n    }.bind(self));\n  }\n\n  function _addValidatorToField(fns, params, name, value) {\n    let validator = validators[name];\n    if (validator) {\n      fns.push(validator);\n      if (value) {\n        let valueParams = (name === \"pattern\" ? [value] : value.split(','));\n        valueParams.unshift(null); // placeholder for input's value\n        params[name] = valueParams;\n      }\n    }\n  }\n\n  /***\n   * Checks whether the form/input elements are valid\n   * @param input => input element(s) or a jquery selector, null for full form validation\n   * @param silent => do not show error messages, just return true/false\n   * @returns {boolean} return true when valid false otherwise\n   */\n  self.validate = async function(input, silent) {\n    silent = (input && silent === true) || input === true;\n    let fields = self.fields;\n    if (input !== true && input !== false) {\n      if (input instanceof HTMLElement) {\n        fields = [input.pristine];\n      } else if (input instanceof NodeList || input instanceof (window.$ || Array) || input instanceof Array) {\n        fields = Array.from(input).map(el => el.pristine);\n      }\n    }\n\n    let valid = true;\n\n    for (let i = 0; fields[i]; i++) {\n      let field = fields[i];\n      if (await _validateField(field)) {\n        !silent && _showSuccess(field);\n      } else {\n        valid = false;\n        !silent && _showError(field);\n      }\n    }\n    return valid;\n  };\n\n  /***\n   * Get errors of a specific field or the whole form\n   * @param input\n   * @returns {Array|*}\n   */\n  self.getErrors = function(input) {\n    if (!input) {\n      let erroneousFields = [];\n      for (let i = 0; i < self.fields.length; i++) {\n        let field = self.fields[i];\n        if (field.errors.length) {\n          erroneousFields.push({ input: field.input, errors: field.errors });\n        }\n      }\n      return erroneousFields;\n    }\n    if (input.tagName && input.tagName.toLowerCase() === \"select\") {\n      return input.pristine.errors;\n    }\n    return input.length ? input[0].pristine.errors : input.pristine.errors;\n  };\n\n  /***\n   * Validates a single field, all validator functions are called and error messages are generated\n   * when a validator fails\n   * @param field\n   * @returns {boolean}\n   * @private\n   */\n  async function _validateField(field) {\n    let errors = [];\n    let valid = true;\n    for (let i = 0; field.validators[i]; i++) {\n      let validator = field.validators[i];\n\n      let params = field.params[validator.name] ? field.params[validator.name] : [];\n      params[0] = field.input.value;\n      const isAsync = validator.fn.constructor.name === \"AsyncFunction\"\n      if (isAsync ? !(await validator.fn.apply(field.input, params)) : !validator.fn.apply(field.input, params)) {\n        valid = false;\n\n        if (typeof validator.msg === \"function\") {\n          errors.push(validator.msg(field.input.value, params))\n        } else if (typeof validator.msg === \"string\") {\n          errors.push(tmpl.apply(validator.msg, params));\n        } else if (validator.msg === Object(validator.msg) && validator.msg[currentLocale]) { // typeof generates unnecessary babel code\n          errors.push(tmpl.apply(validator.msg[currentLocale], params));\n        } else if (field.messages[currentLocale] && field.messages[currentLocale][validator.name]) {\n          errors.push(tmpl.apply(field.messages[currentLocale][validator.name], params));\n        } else if (lang[currentLocale] && lang[currentLocale][validator.name]) {\n          errors.push(tmpl.apply(lang[currentLocale][validator.name], params));\n        } else {\n          errors.push(tmpl.apply(lang[currentLocale].default, params));\n        }\n\n        if (validator.halt === true) {\n          break;\n        }\n      }\n    }\n    field.errors = errors;\n    return valid;\n  }\n\n  /***\n   * Add a validator to a specific dom element in a form\n   * @param elem => The dom element where the validator is applied to\n   * @param fn => validator function\n   * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n   * so on are for the attribute values\n   * @param priority => priority of the validator function, higher valued function gets called first.\n   * @param halt => whether validation should stop for this field after current validation function\n   */\n  self.addValidator = function(elem, fn, msg, priority, halt) {\n    if (elem instanceof HTMLElement) {\n      elem.pristine.validators.push({ fn, msg, priority, halt });\n      elem.pristine.validators.sort((a, b) => b.priority - a.priority);\n    } else {\n      console.warn(\"The parameter elem must be a dom element\");\n    }\n  };\n\n  /***\n   * Add an async validator to a specific dom element in a form\n   * @param elem => The dom element where the validator is applied to\n   * @param fn => async validator function\n   * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n   * so on are for the attribute values\n   * @param priority => priority of the validator function, higher valued function gets called first.\n   * @param halt => whether validation should stop for this field after current validation function\n   */\n  self.addAsyncValidator = function(elem, fn, msg, priority, halt) {\n    if (elem instanceof HTMLElement) {\n      elem.pristine.validators.push({ fn, msg, priority, halt });\n      elem.pristine.validators.sort((a, b) => b.priority - a.priority);\n    } else {\n      console.warn(\"The parameter elem must be a dom element\");\n    }\n  };\n\n  /***\n   * An utility function that returns a 2-element array, first one is the element where error/success class is\n   * applied. 2nd one is the element where error message is displayed. 2nd element is created if doesn't exist and cached.\n   * @param field\n   * @returns {*}\n   * @private\n   */\n  function _getErrorElements(field) {\n    if (field.errorElements) {\n      return field.errorElements;\n    }\n    let errorClassElement = findAncestor(field.input, self.config.classTo);\n    let errorTextParent = null, errorTextElement = null;\n    if (self.config.classTo === self.config.errorTextParent) {\n      errorTextParent = errorClassElement;\n    } else {\n      errorTextParent = errorClassElement.querySelector('.' + self.config.errorTextParent);\n    }\n    if (errorTextParent) {\n      errorTextElement = errorTextParent.querySelector('.' + PRISTINE_ERROR);\n      if (!errorTextElement) {\n        errorTextElement = document.createElement(self.config.errorTextTag);\n        errorTextElement.className = PRISTINE_ERROR + ' ' + self.config.errorTextClass;\n        errorTextParent.appendChild(errorTextElement);\n        errorTextElement.pristineDisplay = errorTextElement.style.display;\n      }\n    }\n    return field.errorElements = [errorClassElement, errorTextElement]\n  }\n\n  function _showError(field) {\n    let errorElements = _getErrorElements(field);\n    let errorClassElement = errorElements[0], errorTextElement = errorElements[1];\n\n    const { input } = field;\n    const inputId = input.id || Math.floor(new Date().valueOf() * Math.random());\n    const errorId = `error-${inputId}`;\n\n    if (errorClassElement) {\n      //errorClassElement.classList.remove(self.config.successClass);\n      //errorClassElement.classList.add(self.config.errorClass);\n\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (sucCls.length) { sucCls.forEach((s) => errorClassElement.classList.remove(s)) };\n      if (errCls.length) { errCls.forEach((e) => errorClassElement.classList.add(e)) };\n      input.setAttribute('aria-describedby', errorId);\n      input.setAttribute('aria-invalid', 'true');\n    }\n    if (errorTextElement) {\n      errorTextElement.setAttribute('id', errorId);\n      errorTextElement.setAttribute('role', 'alert');\n      errorTextElement.innerHTML = field.errors.join('<br/>');\n      errorTextElement.style.display = errorTextElement.pristineDisplay || '';\n    }\n  }\n\n  /***\n   * Adds error to a specific field\n   * @param input\n   * @param error\n   */\n  self.addError = function(input, error) {\n    input = input.length ? input[0] : input;\n    input.pristine.errors.push(error);\n    _showError(input.pristine);\n  };\n\n  function _removeError(field) {\n    let errorElements = _getErrorElements(field);\n    let errorClassElement = errorElements[0], errorTextElement = errorElements[1];\n    const { input } = field\n\n    if (errorClassElement) {\n      // IE > 9 doesn't support multiple class removal\n      // errorClassElement.classList.remove(self.config.errorClass);\n      // errorClassElement.classList.remove(self.config.successClass);\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (errCls.length) { errCls.forEach((e) => errorClassElement.classList.remove(e)) };\n      if (sucCls.length) { sucCls.forEach((s) => errorClassElement.classList.remove(s)) };\n      input.removeAttribute('aria-describedby');\n      input.removeAttribute('aria-invalid');\n    }\n    if (errorTextElement) {\n      errorTextElement.removeAttribute('id');\n      errorTextElement.removeAttribute('role');\n      errorTextElement.innerHTML = '';\n      errorTextElement.style.display = 'none';\n    }\n    return errorElements;\n  }\n\n  function _showSuccess(field) {\n    let errorClassElement = _removeError(field)[0];\n    //errorClassElement && errorClassElement.classList.add(self.config.successClass);\n    let sucCls = createClassArray(self.config.successClass);\n    if (sucCls.length) { errorClassElement && sucCls.forEach((s) => errorClassElement.classList.add(s)) };\n  }\n\n  /***\n   * Resets the errors\n   */\n  self.reset = function() {\n    for (let i = 0; self.fields[i]; i++) {\n      self.fields[i].errorElements = null;\n    }\n    Array.from(self.form.querySelectorAll('.' + PRISTINE_ERROR)).map(function(elem) {\n      elem.parentNode.removeChild(elem);\n    });\n    Array.from(self.form.querySelectorAll('.' + self.config.classTo)).map(function(elem) {\n      // elem.classList.remove(self.config.successClass);\n      // elem.classList.remove(self.config.errorClass);\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (errCls.length) { sucCls.forEach((s) => elem.classList.remove(s)) };\n      if (errCls.length) { errCls.forEach((e) => elem.classList.remove(e)) };\n    });\n\n\n  };\n\n  /***\n  * Convert the multiple classes into an array and remove spaces\n  * if the class string is empty array\n  */\n  function createClassArray(classString) {\n    let cls = classString.split(\" \").filter(e => e);\n    if (cls.length) return cls;\n    return ([]);\n  }\n\n  /***\n   * Resets the errors and deletes all pristine fields\n   */\n  self.destroy = function() {\n    self.reset();\n    self.fields.forEach(function(field) {\n      delete field.input.pristine;\n    });\n    self.fields = [];\n  };\n\n  self.setGlobalConfig = function(config) {\n    defaultConfig = config;\n  };\n\n  return self;\n\n}\n\n/***\n *\n * @param name => Name of the global validator\n * @param fn => validator function\n * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n * so on are for the attribute values\n * @param priority => priority of the validator function, higher valued function gets called first.\n * @param halt => whether validation should stop for this field after current validation function\n */\nPristine.addValidator = function(name, fn, msg, priority, halt) {\n  _(name, { fn, msg, priority, halt });\n};\n\n/***\n *\n * @param name => Name of the global validator\n * @param fn => async validator function\n * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n * so on are for the attribute values\n * @param priority => priority of the validator function, higher valued function gets called first.\n * @param halt => whether validation should stop for this field after current validation function\n */\nPristine.addAsyncValidator = function(name, fn, msg, priority, halt) {\n  _(name, { fn, msg, priority, halt });\n};\n\nPristine.addMessages = function(locale, messages) {\n  let langObj = lang.hasOwnProperty(locale) ? lang[locale] : lang[locale] = {};\n\n  Object.keys(messages).forEach(function(key, index) {\n    langObj[key] = messages[key];\n  });\n}\n\nPristine.setLocale = function(locale) {\n  currentLocale = locale;\n}\n", "export const lang = {\n  en: {\n    required: \"This field is required\",\n    email: \"This field requires a valid email address\",\n    number: \"This field requires a number\",\n    integer: \"This field requires an integer value\",\n    url: \"This field requires a valid website URL\",\n    tel: \"This field requires a valid telephone number\",\n    maxlength: \"This fields length must be < ${1}\",\n    minlength: \"This fields length must be > ${1}\",\n    min: \"Minimum value for this field is ${1}\",\n    max: \"Maximum value for this field is ${1}\",\n    pattern: \"Please match the requested format\",\n    equals: \"The two fields do not match\",\n    default: \"Please enter a correct value\"\n  }\n};\n", "export function findAncestor(el, cls) {\n  while ((el = el.parentElement) && !el.classList.contains(cls));\n  return el;\n}\n\nexport function tmpl(o) {\n  return this.replace(/\\${([^{}]*)}/g, (a, b) => arguments[b]);\n}\n\nexport function groupedElemCount(input) {\n  return input.pristine.self.form.querySelectorAll('input[name=\"' + input.getAttribute('name') + '\"]:checked').length;\n}\n\nexport function mergeConfig(obj1, obj2) {\n  for (let attr in obj2) {\n    if (!(attr in obj1)) {\n      obj1[attr] = obj2[attr];\n    }\n  }\n  return obj1;\n}\n\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAO,IAAMI,EAAO,CAClB,GAAI,CACF,SAAU,yBACV,MAAO,4CACP,OAAQ,+BACR,QAAS,uCACT,IAAK,0CACL,IAAK,+CACL,UAAW,oCACX,UAAW,oCACX,IAAK,uCACL,IAAK,uCACL,QAAS,oCACT,OAAQ,8BACR,QAAS,8BACX,CACF,EChBO,SAASC,EAAaC,EAAIC,EAAK,CACpC,MAAQD,EAAKA,EAAG,gBAAkB,CAACA,EAAG,UAAU,SAASC,CAAG,GAAE,CAC9D,OAAOD,CACT,CAEO,SAASE,EAAKC,EAAG,CACtB,OAAO,KAAK,QAAQ,gBAAiB,CAACC,EAAGC,IAAM,UAAUA,CAAC,CAAC,CAC7D,CAEO,SAASC,EAAiBC,EAAO,CACtC,OAAOA,EAAM,SAAS,KAAK,KAAK,iBAAiB,eAAiBA,EAAM,aAAa,MAAM,EAAI,YAAY,EAAE,MAC/G,CAEO,SAASC,EAAYC,EAAMC,EAAM,CACtC,QAASC,KAAQD,EACTC,KAAQF,IACZA,EAAKE,CAAI,EAAID,EAAKC,CAAI,GAG1B,OAAOF,CACT,CFjBA,IAAIG,EAAgB,CAClB,QAAS,aACT,WAAY,aACZ,aAAc,cACd,gBAAiB,aACjB,aAAc,MACd,eAAgB,WAClB,EAEMC,EAAiB,iBACjBC,EAAW,kEACXC,EAAqB,IAAI,IAAI,CAAC,WAAY,MAAO,MAAO,YAAa,YAAa,SAAS,CAAC,EAC5FC,EAAc,yJAEdC,EAAgB,yCAClBC,EAAgB,KACdC,EAAa,CAAC,EAEdC,EAAI,SAASC,EAAMC,EAAW,CAClCA,EAAU,KAAOD,EACbC,EAAU,WAAa,SACzBA,EAAU,SAAW,GACvBH,EAAWE,CAAI,EAAIC,CACrB,EAEAF,EAAE,OAAQ,CAAE,GAAKG,GAAQ,GAAM,SAAU,CAAE,CAAC,EAC5CH,EAAE,WAAY,CAAE,GAAI,SAASG,EAAK,CAAE,OAAQ,KAAK,OAAS,SAAW,KAAK,OAAS,WAAcC,EAAiB,IAAI,EAAID,IAAQ,QAAaA,EAAI,KAAK,IAAM,EAAG,EAAG,SAAU,GAAI,KAAM,EAAK,CAAC,EAC9LH,EAAE,QAAS,CAAE,GAAKG,GAAQ,CAACA,GAAOP,EAAY,KAAKO,CAAG,CAAE,CAAC,EACzDH,EAAE,SAAU,CAAE,GAAKG,GAAQ,CAACA,GAAO,CAAC,MAAM,WAAWA,CAAG,CAAC,EAAG,SAAU,CAAE,CAAC,EACzEH,EAAE,UAAW,CAAE,GAAKG,GAAQ,CAACA,GAAO,QAAQ,KAAKA,CAAG,CAAE,CAAC,EACvDH,EAAE,YAAa,CAAE,GAAI,CAACG,EAAKE,IAAW,CAACF,GAAOA,EAAI,QAAU,SAASE,CAAM,CAAE,CAAC,EAC9EL,EAAE,YAAa,CAAE,GAAI,CAACG,EAAKE,IAAW,CAACF,GAAOA,EAAI,QAAU,SAASE,CAAM,CAAE,CAAC,EAC9EL,EAAE,MAAO,CAAE,GAAI,SAASG,EAAKG,EAAO,CAAE,MAAO,CAACH,IAAQ,KAAK,OAAS,WAAaC,EAAiB,IAAI,GAAK,SAASE,CAAK,EAAI,WAAWH,CAAG,GAAK,WAAWG,CAAK,EAAI,CAAE,CAAC,EACvKN,EAAE,MAAO,CAAE,GAAI,SAASG,EAAKG,EAAO,CAAE,MAAO,CAACH,IAAQ,KAAK,OAAS,WAAaC,EAAiB,IAAI,GAAK,SAASE,CAAK,EAAI,WAAWH,CAAG,GAAK,WAAWG,CAAK,EAAI,CAAE,CAAC,EACvKN,EAAE,UAAW,CAAE,GAAI,CAACG,EAAKI,IAAY,CAAE,IAAIC,EAAID,EAAQ,MAAM,IAAI,OAAO,oBAAoB,CAAC,EAAG,MAAO,CAACJ,GAAQ,IAAI,OAAOK,EAAE,CAAC,EAAGA,EAAE,CAAC,CAAC,EAAG,KAAKL,CAAG,CAAG,CAAE,CAAC,EACtJH,EAAE,SAAU,CAAE,GAAI,CAACG,EAAKM,IAAuB,CAAE,IAAIC,EAAQ,SAAS,cAAcD,CAAkB,EAAG,OAAQC,IAAY,CAACP,GAAO,CAACO,EAAM,OAAWA,EAAM,QAAUP,EAAO,CAAE,CAAC,EAElK,SAARQ,EAA0BC,EAAMC,EAAQC,EAAM,CAEnD,IAAIC,EAAO,KAEXC,EAAKJ,EAAMC,EAAQC,CAAI,EAEvB,SAASE,EAAKJ,EAAMC,EAAQC,EAAM,CAEhCF,EAAK,aAAa,aAAc,MAAM,EAEtCG,EAAK,KAAOH,EACZG,EAAK,OAASE,EAAYJ,GAAU,CAAC,EAAGrB,CAAa,EACjDsB,IAAS,OACXC,EAAK,KAAO,OACHD,IAAS,OAClBC,EAAK,KAAO,OACHD,IAAS,SAClBC,EAAK,KAAO,SAEZA,EAAK,KAAO,MAEdA,EAAK,OAAS,MAAM,KAAKH,EAAK,iBAAiBlB,CAAQ,CAAC,EAAE,IAAI,SAASwB,EAAO,CAE5E,IAAIC,EAAM,CAAC,EACPC,EAAS,CAAC,EACVC,EAAW,CAAC,EACZC,EAAwB,IAAI,IAuChC,GApCA,CAAC,EAAE,QAAQ,KAAKJ,EAAM,WAAY,SAASK,EAAM,CAC/C,GAAI,kBAAkB,KAAKA,EAAK,IAAI,EAAG,CACrC,IAAItB,EAAOsB,EAAK,KAAK,OAAO,EAAE,EAC1B5B,EAAmB,IAAIM,CAAI,EAC7BqB,EAAsB,IAAIrB,CAAI,EACrBA,IAAS,QAClBqB,EAAsB,IAAIC,EAAK,KAAK,CAExC,CACF,CAAC,EAGD,CAAC,EAAE,QAAQ,KAAKL,EAAM,WAAY,SAASK,EAAM,CAC/C,GAAI,kBAAkB,KAAKA,EAAK,IAAI,EAAG,CACrC,IAAItB,EAAOsB,EAAK,KAAK,OAAO,EAAE,EAC1BC,EAAevB,EAAK,MAAMJ,CAAa,EAC3C,GAAI2B,IAAiB,KAAM,CACzB,IAAIC,EAASD,EAAa,CAAC,IAAM,OAAY,KAAOA,EAAa,CAAC,EAC7DH,EAAS,eAAeI,CAAM,IACjCJ,EAASI,CAAM,EAAI,CAAC,GACtBJ,EAASI,CAAM,EAAExB,EAAK,MAAM,EAAGA,EAAK,OAASuB,EAAa,CAAC,EAAE,MAAM,CAAC,EAAID,EAAK,MAC7E,MACF,CACItB,IAAS,SAAQA,EAAOsB,EAAK,OACjCG,EAAqBP,EAAKC,EAAQnB,EAAMsB,EAAK,KAAK,CACpD,MAAW5B,EAAmB,IAAI4B,EAAK,IAAI,GAAK,CAACD,EAAsB,IAAIC,EAAK,IAAI,EAClFG,EAAqBP,EAAKC,EAAQG,EAAK,KAAMA,EAAK,KAAK,EAC9CA,EAAK,OAAS,QAAU,CAACD,EAAsB,IAAIC,EAAK,KAAK,GACtEG,EAAqBP,EAAKC,EAAQG,EAAK,KAAK,CAEhD,CAAC,EAEDJ,EAAI,KAAK,CAACQ,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,EAItCZ,EAAK,OAAS,OAChBG,EAAM,iBAAmB,CAAC,CAAC,QAAS,UAAU,EAAE,QAAQA,EAAM,aAAa,MAAM,CAAC,EAAc,SAAV,QAAqB,SAASW,EAAG,CACrHd,EAAK,SAASc,EAAE,MAAM,CACxB,EAAE,KAAKd,CAAI,CAAC,UACHA,EAAK,OAAS,OACvBG,EAAM,iBAAmB,CAAC,CAAC,QAAS,UAAU,EAAE,QAAQA,EAAM,aAAa,MAAM,CAAC,EAAa,SAAT,OAAoB,SAASW,EAAG,CACpHd,EAAK,SAASc,EAAE,MAAM,CACxB,EAAE,KAAKd,CAAI,CAAC,UACHA,EAAK,OAAS,SAAU,CACjC,IAAIe,EAAU,GACRC,EAAeb,EAAM,MAC3BA,EAAM,iBAAmB,CAAC,CAAC,QAAS,UAAU,EAAE,QAAQA,EAAM,aAAa,MAAM,CAAC,EAAa,SAAT,OAAoB,SAASW,EAAG,CACpHC,EAAU,GACVf,EAAK,SAASc,EAAE,MAAM,CACxB,EAAE,KAAKd,CAAI,CAAC,EACZG,EAAM,iBAAmB,CAAC,CAAC,QAAS,UAAU,EAAE,QAAQA,EAAM,aAAa,MAAM,CAAC,EAAc,SAAV,QAAqB,SAASW,EAAG,CACjHC,GACFf,EAAK,SAASc,EAAE,MAAM,CAE1B,EAAE,KAAKd,CAAI,CAAC,EACZG,EAAM,iBAAiB,QAAS,UAAW,EACzB,OAAS,YAAc,OAAS,QAC5CA,EAAM,UAAY,eAClBA,EAAM,QAAUa,IAEL,CAACD,IACdA,EAAU,GACVf,EAAK,SAASG,CAAK,EAEvB,CAAC,CACH,CAEA,OAAOA,EAAM,SAAW,CAAE,MAAAA,EAAO,WAAYC,EAAK,OAAAC,EAAQ,SAAAC,EAAU,KAAAN,CAAK,CAE3E,EAAE,KAAKA,CAAI,CAAC,CACd,CAEA,SAASW,EAAqBP,EAAKC,EAAQnB,EAAM+B,EAAO,CACtD,IAAI9B,EAAYH,EAAWE,CAAI,EAC/B,GAAIC,IACFiB,EAAI,KAAKjB,CAAS,EACd8B,GAAO,CACT,IAAIC,EAAehC,IAAS,UAAY,CAAC+B,CAAK,EAAIA,EAAM,MAAM,GAAG,EACjEC,EAAY,QAAQ,IAAI,EACxBb,EAAOnB,CAAI,EAAIgC,CACjB,CAEJ,CAQAlB,EAAK,SAAW,eAAeG,EAAOgB,EAAQ,CAC5CA,EAAUhB,GAASgB,IAAW,IAAShB,IAAU,GACjD,IAAIiB,EAASpB,EAAK,OACdG,IAAU,IAAQA,IAAU,KAC1BA,aAAiB,YACnBiB,EAAS,CAACjB,EAAM,QAAQ,GACfA,aAAiB,UAAYA,aAAkB,OAAO,GAAK,QAAUA,aAAiB,SAC/FiB,EAAS,MAAM,KAAKjB,CAAK,EAAE,IAAIkB,GAAMA,EAAG,QAAQ,IAIpD,IAAIC,EAAQ,GAEZ,QAASC,EAAI,EAAGH,EAAOG,CAAC,EAAGA,IAAK,CAC9B,IAAIC,EAAQJ,EAAOG,CAAC,EAChB,MAAME,EAAeD,CAAK,EAC5B,CAACL,GAAUO,EAAaF,CAAK,GAE7BF,EAAQ,GACR,CAACH,GAAUQ,EAAWH,CAAK,EAE/B,CACA,OAAOF,CACT,EAOAtB,EAAK,UAAY,SAASG,EAAO,CAC/B,GAAI,CAACA,EAAO,CACV,IAAIyB,EAAkB,CAAC,EACvB,QAAS,EAAI,EAAG,EAAI5B,EAAK,OAAO,OAAQ,IAAK,CAC3C,IAAIwB,EAAQxB,EAAK,OAAO,CAAC,EACrBwB,EAAM,OAAO,QACfI,EAAgB,KAAK,CAAE,MAAOJ,EAAM,MAAO,OAAQA,EAAM,MAAO,CAAC,CAErE,CACA,OAAOI,CACT,CACA,OAAIzB,EAAM,SAAWA,EAAM,QAAQ,YAAY,IAAM,SAC5CA,EAAM,SAAS,OAEjBA,EAAM,OAASA,EAAM,CAAC,EAAE,SAAS,OAASA,EAAM,SAAS,MAClE,EASA,eAAesB,EAAeD,EAAO,CACnC,IAAIK,EAAS,CAAC,EACVP,EAAQ,GACZ,QAASC,EAAI,EAAGC,EAAM,WAAWD,CAAC,EAAGA,IAAK,CACxC,IAAIpC,EAAYqC,EAAM,WAAWD,CAAC,EAE9BlB,EAASmB,EAAM,OAAOrC,EAAU,IAAI,EAAIqC,EAAM,OAAOrC,EAAU,IAAI,EAAI,CAAC,EAG5E,GAFAkB,EAAO,CAAC,EAAImB,EAAM,MAAM,OACRrC,EAAU,GAAG,YAAY,OAAS,gBACpC,CAAE,MAAMA,EAAU,GAAG,MAAMqC,EAAM,MAAOnB,CAAM,EAAK,CAAClB,EAAU,GAAG,MAAMqC,EAAM,MAAOnB,CAAM,KACtGiB,EAAQ,GAEJ,OAAOnC,EAAU,KAAQ,WAC3B0C,EAAO,KAAK1C,EAAU,IAAIqC,EAAM,MAAM,MAAOnB,CAAM,CAAC,EAC3C,OAAOlB,EAAU,KAAQ,SAClC0C,EAAO,KAAKC,EAAK,MAAM3C,EAAU,IAAKkB,CAAM,CAAC,EACpClB,EAAU,MAAQ,OAAOA,EAAU,GAAG,GAAKA,EAAU,IAAIJ,CAAa,EAC/E8C,EAAO,KAAKC,EAAK,MAAM3C,EAAU,IAAIJ,CAAa,EAAGsB,CAAM,CAAC,EACnDmB,EAAM,SAASzC,CAAa,GAAKyC,EAAM,SAASzC,CAAa,EAAEI,EAAU,IAAI,EACtF0C,EAAO,KAAKC,EAAK,MAAMN,EAAM,SAASzC,CAAa,EAAEI,EAAU,IAAI,EAAGkB,CAAM,CAAC,EACpE0B,EAAKhD,CAAa,GAAKgD,EAAKhD,CAAa,EAAEI,EAAU,IAAI,EAClE0C,EAAO,KAAKC,EAAK,MAAMC,EAAKhD,CAAa,EAAEI,EAAU,IAAI,EAAGkB,CAAM,CAAC,EAEnEwB,EAAO,KAAKC,EAAK,MAAMC,EAAKhD,CAAa,EAAE,QAASsB,CAAM,CAAC,EAGzDlB,EAAU,OAAS,IACrB,KAGN,CACA,OAAAqC,EAAM,OAASK,EACRP,CACT,CAWAtB,EAAK,aAAe,SAASgC,EAAMC,EAAIC,EAAKC,EAAUC,EAAM,CACtDJ,aAAgB,aAClBA,EAAK,SAAS,WAAW,KAAK,CAAE,GAAAC,EAAI,IAAAC,EAAK,SAAAC,EAAU,KAAAC,CAAK,CAAC,EACzDJ,EAAK,SAAS,WAAW,KAAK,CAACpB,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,GAE/D,QAAQ,KAAK,0CAA0C,CAE3D,EAWAZ,EAAK,kBAAoB,SAASgC,EAAMC,EAAIC,EAAKC,EAAUC,EAAM,CAC3DJ,aAAgB,aAClBA,EAAK,SAAS,WAAW,KAAK,CAAE,GAAAC,EAAI,IAAAC,EAAK,SAAAC,EAAU,KAAAC,CAAK,CAAC,EACzDJ,EAAK,SAAS,WAAW,KAAK,CAACpB,EAAGC,IAAMA,EAAE,SAAWD,EAAE,QAAQ,GAE/D,QAAQ,KAAK,0CAA0C,CAE3D,EASA,SAASyB,EAAkBb,EAAO,CAChC,GAAIA,EAAM,cACR,OAAOA,EAAM,cAEf,IAAIc,EAAoBC,EAAaf,EAAM,MAAOxB,EAAK,OAAO,OAAO,EACjEwC,EAAkB,KAAMC,EAAmB,KAC/C,OAAIzC,EAAK,OAAO,UAAYA,EAAK,OAAO,gBACtCwC,EAAkBF,EAElBE,EAAkBF,EAAkB,cAAc,IAAMtC,EAAK,OAAO,eAAe,EAEjFwC,IACFC,EAAmBD,EAAgB,cAAc,IAAM9D,CAAc,EAChE+D,IACHA,EAAmB,SAAS,cAAczC,EAAK,OAAO,YAAY,EAClEyC,EAAiB,UAAY/D,EAAiB,IAAMsB,EAAK,OAAO,eAChEwC,EAAgB,YAAYC,CAAgB,EAC5CA,EAAiB,gBAAkBA,EAAiB,MAAM,UAGvDjB,EAAM,cAAgB,CAACc,EAAmBG,CAAgB,CACnE,CAEA,SAASd,EAAWH,EAAO,CACzB,IAAIkB,EAAgBL,EAAkBb,CAAK,EACvCc,EAAoBI,EAAc,CAAC,EAAGD,EAAmBC,EAAc,CAAC,EAEtE,CAAE,MAAAvC,CAAM,EAAIqB,EAEZmB,EAAU,SADAxC,EAAM,IAAM,KAAK,MAAM,IAAI,KAAK,EAAE,QAAQ,EAAI,KAAK,OAAO,CAAC,CAC3C,GAEhC,GAAImC,EAAmB,CAIrB,IAAIM,EAASC,EAAiB7C,EAAK,OAAO,UAAU,EAChD8C,EAASD,EAAiB7C,EAAK,OAAO,YAAY,EAClD8C,EAAO,QAAUA,EAAO,QAASC,GAAMT,EAAkB,UAAU,OAAOS,CAAC,CAAC,EAC5EH,EAAO,QAAUA,EAAO,QAAS9B,GAAMwB,EAAkB,UAAU,IAAIxB,CAAC,CAAC,EAC7EX,EAAM,aAAa,mBAAoBwC,CAAO,EAC9CxC,EAAM,aAAa,eAAgB,MAAM,CAC3C,CACIsC,IACFA,EAAiB,aAAa,KAAME,CAAO,EAC3CF,EAAiB,aAAa,OAAQ,OAAO,EAC7CA,EAAiB,UAAYjB,EAAM,OAAO,KAAK,OAAO,EACtDiB,EAAiB,MAAM,QAAUA,EAAiB,iBAAmB,GAEzE,CAOAzC,EAAK,SAAW,SAASG,EAAO6C,EAAO,CACrC7C,EAAQA,EAAM,OAASA,EAAM,CAAC,EAAIA,EAClCA,EAAM,SAAS,OAAO,KAAK6C,CAAK,EAChCrB,EAAWxB,EAAM,QAAQ,CAC3B,EAEA,SAAS8C,EAAazB,EAAO,CAC3B,IAAIkB,EAAgBL,EAAkBb,CAAK,EACvCc,EAAoBI,EAAc,CAAC,EAAGD,EAAmBC,EAAc,CAAC,EACtE,CAAE,MAAAvC,CAAM,EAAIqB,EAElB,GAAIc,EAAmB,CAIrB,IAAIM,EAASC,EAAiB7C,EAAK,OAAO,UAAU,EAChD8C,EAASD,EAAiB7C,EAAK,OAAO,YAAY,EAClD4C,EAAO,QAAUA,EAAO,QAAS9B,GAAMwB,EAAkB,UAAU,OAAOxB,CAAC,CAAC,EAC5EgC,EAAO,QAAUA,EAAO,QAASC,GAAMT,EAAkB,UAAU,OAAOS,CAAC,CAAC,EAChF5C,EAAM,gBAAgB,kBAAkB,EACxCA,EAAM,gBAAgB,cAAc,CACtC,CACA,OAAIsC,IACFA,EAAiB,gBAAgB,IAAI,EACrCA,EAAiB,gBAAgB,MAAM,EACvCA,EAAiB,UAAY,GAC7BA,EAAiB,MAAM,QAAU,QAE5BC,CACT,CAEA,SAAShB,EAAaF,EAAO,CAC3B,IAAIc,EAAoBW,EAAazB,CAAK,EAAE,CAAC,EAEzCsB,EAASD,EAAiB7C,EAAK,OAAO,YAAY,EAClD8C,EAAO,QAAUR,GAAqBQ,EAAO,QAAS,GAAMR,EAAkB,UAAU,IAAI,CAAC,CAAC,CACpG,CAKAtC,EAAK,MAAQ,UAAW,CACtB,QAASuB,EAAI,EAAGvB,EAAK,OAAOuB,CAAC,EAAGA,IAC9BvB,EAAK,OAAOuB,CAAC,EAAE,cAAgB,KAEjC,MAAM,KAAKvB,EAAK,KAAK,iBAAiB,IAAMtB,CAAc,CAAC,EAAE,IAAI,SAASsD,EAAM,CAC9EA,EAAK,WAAW,YAAYA,CAAI,CAClC,CAAC,EACD,MAAM,KAAKhC,EAAK,KAAK,iBAAiB,IAAMA,EAAK,OAAO,OAAO,CAAC,EAAE,IAAI,SAASgC,EAAM,CAGnF,IAAIY,EAASC,EAAiB7C,EAAK,OAAO,UAAU,EAChD8C,EAASD,EAAiB7C,EAAK,OAAO,YAAY,EAClD4C,EAAO,QAAUE,EAAO,QAAS,GAAMd,EAAK,UAAU,OAAO,CAAC,CAAC,EAC/DY,EAAO,QAAUA,EAAO,QAAS9B,GAAMkB,EAAK,UAAU,OAAOlB,CAAC,CAAC,CACrE,CAAC,CAGH,EAMA,SAAS+B,EAAiBK,EAAa,CACrC,IAAIC,EAAMD,EAAY,MAAM,GAAG,EAAE,OAAOpC,GAAKA,CAAC,EAC9C,OAAIqC,EAAI,OAAeA,EACf,CAAC,CACX,CAKA,OAAAnD,EAAK,QAAU,UAAW,CACxBA,EAAK,MAAM,EACXA,EAAK,OAAO,QAAQ,SAASwB,EAAO,CAClC,OAAOA,EAAM,MAAM,QACrB,CAAC,EACDxB,EAAK,OAAS,CAAC,CACjB,EAEAA,EAAK,gBAAkB,SAASF,EAAQ,CACtCrB,EAAgBqB,CAClB,EAEOE,CAET,CAWAJ,EAAS,aAAe,SAASV,EAAM+C,EAAIC,EAAKC,EAAUC,EAAM,CAC9DnD,EAAEC,EAAM,CAAE,GAAA+C,EAAI,IAAAC,EAAK,SAAAC,EAAU,KAAAC,CAAK,CAAC,CACrC,EAWAxC,EAAS,kBAAoB,SAASV,EAAM+C,EAAIC,EAAKC,EAAUC,EAAM,CACnEnD,EAAEC,EAAM,CAAE,GAAA+C,EAAI,IAAAC,EAAK,SAAAC,EAAU,KAAAC,CAAK,CAAC,CACrC,EAEAxC,EAAS,YAAc,SAASc,EAAQJ,EAAU,CAChD,IAAI8C,EAAUrB,EAAK,eAAerB,CAAM,EAAIqB,EAAKrB,CAAM,EAAIqB,EAAKrB,CAAM,EAAI,CAAC,EAE3E,OAAO,KAAKJ,CAAQ,EAAE,QAAQ,SAAS+C,EAAKC,EAAO,CACjDF,EAAQC,CAAG,EAAI/C,EAAS+C,CAAG,CAC7B,CAAC,CACH,EAEAzD,EAAS,UAAY,SAASc,EAAQ,CACpC3B,EAAgB2B,CAClB",
  "names": ["pristine_exports", "__export", "Pristine", "__toCommonJS", "lang", "findAncestor", "el", "cls", "tmpl", "o", "a", "b", "groupedElemCount", "input", "mergeConfig", "obj1", "obj2", "attr", "defaultConfig", "PRISTINE_ERROR", "SELECTOR", "ALLOWED_ATTRIBUTES", "EMAIL_REGEX", "MESSAGE_REGEX", "currentLocale", "validators", "_", "name", "validator", "val", "groupedElemCount", "length", "limit", "pattern", "m", "otherFieldSelector", "other", "Pristine", "form", "config", "live", "self", "init", "mergeConfig", "input", "fns", "params", "messages", "overlappingAttributes", "attr", "messageMatch", "locale", "_addValidatorToField", "a", "b", "e", "touched", "defaultValue", "value", "valueParams", "silent", "fields", "el", "valid", "i", "field", "_validateField", "_showSuccess", "_showError", "erroneousFields", "errors", "tmpl", "lang", "elem", "fn", "msg", "priority", "halt", "_getErrorElements", "errorClassElement", "findAncestor", "errorTextParent", "errorTextElement", "errorElements", "errorId", "errCls", "createClassArray", "sucCls", "s", "error", "_removeError", "classString", "cls", "langObj", "key", "index"]
}
