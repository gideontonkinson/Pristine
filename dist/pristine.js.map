{
  "version": 3,
  "sources": ["../src/pristine.js", "../src/lang.js", "../src/utils.js"],
  "sourcesContent": ["import { lang } from './lang';\nimport { tmpl, findAncestor, groupedElemCount, mergeConfig } from './utils';\n\nlet defaultConfig = {\n  classTo: 'form-group',\n  errorClass: 'has-danger',\n  successClass: 'has-success',\n  errorTextParent: 'form-group',\n  errorTextTag: 'div',\n  errorTextClass: 'text-help',\n};\n\nconst PRISTINE_ERROR = 'pristine-error';\nconst SELECTOR = \"input:not([type^=hidden]):not([type^=submit]), select, textarea\";\nconst ALLOWED_ATTRIBUTES = new Set([\"required\", \"min\", \"max\", \"minlength\", \"maxlength\", \"pattern\"]);\nconst EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nconst MESSAGE_REGEX = /-message(?:-([a-z]{2}(?:_[A-Z]{2})?))?/; // matches, -message, -message-en, -message-en_US\nlet currentLocale = 'en';\nconst validators = {};\n\nconst _ = function(name, validator) {\n  validator.name = name;\n  if (validator.priority === undefined)\n    validator.priority = 1;\n  validators[name] = validator;\n};\n\n_('text', { fn: (val) => true, priority: 0 });\n_('required', { fn: function(val) { return (this.type === 'radio' || this.type === 'checkbox') ? groupedElemCount(this) : val !== undefined && val.trim() !== '' }, priority: 99, halt: true });\n_('email', { fn: (val) => !val || EMAIL_REGEX.test(val) });\n_('number', { fn: (val) => !val || !isNaN(parseFloat(val)), priority: 2 });\n_('integer', { fn: (val) => !val || /^\\d+$/.test(val) });\n_('minlength', { fn: (val, length) => !val || val.length >= parseInt(length) });\n_('maxlength', { fn: (val, length) => !val || val.length <= parseInt(length) });\n_('min', { fn: function(val, limit) { return !val || (this.type === 'checkbox' ? groupedElemCount(this) >= parseInt(limit) : parseFloat(val) >= parseFloat(limit)); } });\n_('max', { fn: function(val, limit) { return !val || (this.type === 'checkbox' ? groupedElemCount(this) <= parseInt(limit) : parseFloat(val) <= parseFloat(limit)); } });\n_('pattern', { fn: (val, pattern) => { let m = pattern.match(new RegExp('^/(.*?)/([gimy]*)$')); return !val || (new RegExp(m[1], m[2])).test(val); } });\n_('equals', { fn: (val, otherFieldSelector) => { let other = document.querySelector(otherFieldSelector); return (other) && ((!val && !other.value) || (other.value === val)); } });\n\nexport default function Pristine(form, config, live) {\n\n  let self = this;\n\n  init(form, config, live);\n\n  function init(form, config, live) {\n\n    form.setAttribute(\"novalidate\", \"true\");\n\n    self.form = form;\n    self.config = mergeConfig(config || {}, defaultConfig);\n    if (live === \"live\") {\n      self.live = \"live\";\n    } else if (live === \"blur\") {\n      self.live = \"blur\";\n    } else if (live === \"hybrid\") {\n      self.live = \"hybrid\"\n    } else {\n      self.live = \"off\"\n    }\n    self.fields = Array.from(form.querySelectorAll(SELECTOR)).map(function(input) {\n\n      let fns = [];\n      let params = {};\n      let messages = {};\n      let overlappingAttributes = new Set();\n\n      // Check for overlapping attributes and prefer the pristine\n      [].forEach.call(input.attributes, function(attr) {\n        if (/^data-pristine-/.test(attr.name)) {\n          let name = attr.name.substr(14);\n          if (ALLOWED_ATTRIBUTES.has(name)) {\n            overlappingAttributes.add(name)\n          } else if (name === 'type') {\n            overlappingAttributes.add(attr.value)\n          }\n        }\n      });\n\n\n      [].forEach.call(input.attributes, function(attr) {\n        if (/^data-pristine-/.test(attr.name)) {\n          let name = attr.name.substr(14);\n          let messageMatch = name.match(MESSAGE_REGEX);\n          if (messageMatch !== null) {\n            let locale = messageMatch[1] === undefined ? 'en' : messageMatch[1];\n            if (!messages.hasOwnProperty(locale))\n              messages[locale] = {};\n            messages[locale][name.slice(0, name.length - messageMatch[0].length)] = attr.value;\n            return;\n          }\n          if (name === 'type') name = attr.value;\n          _addValidatorToField(fns, params, name, attr.value);\n        } else if (ALLOWED_ATTRIBUTES.has(attr.name) && !overlappingAttributes.has(attr.name)) {\n          _addValidatorToField(fns, params, attr.name, attr.value);\n        } else if (attr.name === 'type' && !overlappingAttributes.has(attr.value)) {\n          _addValidatorToField(fns, params, attr.value);\n        }\n      });\n\n      fns.sort((a, b) => b.priority - a.priority);\n\n\n\n      if (self.live === 'live') {\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change'), function(e) {\n          self.validate(e.target);\n        }.bind(self));\n      } else if (self.live === 'blur') {\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'blur' : 'change'), function(e) {\n          self.validate(e.target);\n        }.bind(self));\n      } else if (self.live === 'hybrid') {\n        let touched = false\n        const defaultValue = input.value\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'blur' : 'change'), function(e) {\n          touched = true\n          self.validate(e.target);\n        }.bind(self));\n        input.addEventListener((!~['radio', 'checkbox'].indexOf(input.getAttribute('type')) ? 'input' : 'change'), function(e) {\n          if (touched) {\n            self.validate(e.target);\n          }\n        }.bind(self));\n        input.addEventListener('input', function() {\n          const changed = type === 'checkbox' || type === 'radio'\n            ? input.checked !== defaultChecked\n            : input.value !== defaultValue\n\n          if (changed && !touched) {\n            touched = true\n            self.validate(input)\n          }\n        })\n      }\n\n      return input.pristine = { input, validators: fns, params, messages, self };\n\n    }.bind(self));\n  }\n\n  function _addValidatorToField(fns, params, name, value) {\n    let validator = validators[name];\n    if (validator) {\n      fns.push(validator);\n      if (value) {\n        let valueParams = (name === \"pattern\" ? [value] : value.split(','));\n        valueParams.unshift(null); // placeholder for input's value\n        params[name] = valueParams;\n      }\n    }\n  }\n\n  /***\n   * Checks whether the form/input elements are valid\n   * @param input => input element(s) or a jquery selector, null for full form validation\n   * @param silent => do not show error messages, just return true/false\n   * @returns {boolean} return true when valid false otherwise\n   */\n  self.validate = async function(input, silent) {\n    silent = (input && silent === true) || input === true;\n    let fields = self.fields;\n    if (input !== true && input !== false) {\n      if (input instanceof HTMLElement) {\n        fields = [input.pristine];\n      } else if (input instanceof NodeList || input instanceof (window.$ || Array) || input instanceof Array) {\n        fields = Array.from(input).map(el => el.pristine);\n      }\n    }\n\n    let valid = true;\n\n    for (let i = 0; fields[i]; i++) {\n      let field = fields[i];\n      if (await _validateField(field)) {\n        !silent && _showSuccess(field);\n      } else {\n        valid = false;\n        !silent && _showError(field);\n      }\n    }\n    return valid;\n  };\n\n  /***\n   * Get errors of a specific field or the whole form\n   * @param input\n   * @returns {Array|*}\n   */\n  self.getErrors = function(input) {\n    if (!input) {\n      let erroneousFields = [];\n      for (let i = 0; i < self.fields.length; i++) {\n        let field = self.fields[i];\n        if (field.errors.length) {\n          erroneousFields.push({ input: field.input, errors: field.errors });\n        }\n      }\n      return erroneousFields;\n    }\n    if (input.tagName && input.tagName.toLowerCase() === \"select\") {\n      return input.pristine.errors;\n    }\n    return input.length ? input[0].pristine.errors : input.pristine.errors;\n  };\n\n  /***\n   * Validates a single field, all validator functions are called and error messages are generated\n   * when a validator fails\n   * @param field\n   * @returns {boolean}\n   * @private\n   */\n  async function _validateField(field) {\n    let errors = [];\n    let valid = true;\n    for (let i = 0; field.validators[i]; i++) {\n      let validator = field.validators[i];\n\n      let params = field.params[validator.name] ? field.params[validator.name] : [];\n      params[0] = field.input.value;\n      const isAsync = validator.fn.constructor.name === \"AsyncFunction\"\n      if (isAsync ? !(await validator.fn.apply(field.input, params)) : !validator.fn.apply(field.input, params)) {\n        valid = false;\n\n        if (typeof validator.msg === \"function\") {\n          errors.push(validator.msg(field.input.value, params))\n        } else if (typeof validator.msg === \"string\") {\n          errors.push(tmpl.apply(validator.msg, params));\n        } else if (validator.msg === Object(validator.msg) && validator.msg[currentLocale]) { // typeof generates unnecessary babel code\n          errors.push(tmpl.apply(validator.msg[currentLocale], params));\n        } else if (field.messages[currentLocale] && field.messages[currentLocale][validator.name]) {\n          errors.push(tmpl.apply(field.messages[currentLocale][validator.name], params));\n        } else if (lang[currentLocale] && lang[currentLocale][validator.name]) {\n          errors.push(tmpl.apply(lang[currentLocale][validator.name], params));\n        } else {\n          errors.push(tmpl.apply(lang[currentLocale].default, params));\n        }\n\n        if (validator.halt === true) {\n          break;\n        }\n      }\n    }\n    field.errors = errors;\n    return valid;\n  }\n\n  /***\n   * Add a validator to a specific dom element in a form\n   * @param elem => The dom element where the validator is applied to\n   * @param fn => validator function\n   * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n   * so on are for the attribute values\n   * @param priority => priority of the validator function, higher valued function gets called first.\n   * @param halt => whether validation should stop for this field after current validation function\n   */\n  self.addValidator = function(elem, fn, msg, priority, halt) {\n    if (elem instanceof HTMLElement) {\n      elem.pristine.validators.push({ fn, msg, priority, halt });\n      elem.pristine.validators.sort((a, b) => b.priority - a.priority);\n    } else {\n      console.warn(\"The parameter elem must be a dom element\");\n    }\n  };\n\n  /***\n   * Add an async validator to a specific dom element in a form\n   * @param elem => The dom element where the validator is applied to\n   * @param fn => async validator function\n   * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n   * so on are for the attribute values\n   * @param priority => priority of the validator function, higher valued function gets called first.\n   * @param halt => whether validation should stop for this field after current validation function\n   */\n  self.addAsyncValidator = function(elem, fn, msg, priority, halt) {\n    if (elem instanceof HTMLElement) {\n      elem.pristine.validators.push({ fn, msg, priority, halt });\n      elem.pristine.validators.sort((a, b) => b.priority - a.priority);\n    } else {\n      console.warn(\"The parameter elem must be a dom element\");\n    }\n  };\n\n  /***\n   * An utility function that returns a 2-element array, first one is the element where error/success class is\n   * applied. 2nd one is the element where error message is displayed. 2nd element is created if doesn't exist and cached.\n   * @param field\n   * @returns {*}\n   * @private\n   */\n  function _getErrorElements(field) {\n    if (field.errorElements) {\n      return field.errorElements;\n    }\n    let errorClassElement = findAncestor(field.input, self.config.classTo);\n    let errorTextParent = null, errorTextElement = null;\n    if (self.config.classTo === self.config.errorTextParent) {\n      errorTextParent = errorClassElement;\n    } else {\n      errorTextParent = errorClassElement.querySelector('.' + self.config.errorTextParent);\n    }\n    if (errorTextParent) {\n      errorTextElement = errorTextParent.querySelector('.' + PRISTINE_ERROR);\n      if (!errorTextElement) {\n        errorTextElement = document.createElement(self.config.errorTextTag);\n        errorTextElement.className = PRISTINE_ERROR + ' ' + self.config.errorTextClass;\n        errorTextParent.appendChild(errorTextElement);\n        errorTextElement.pristineDisplay = errorTextElement.style.display;\n      }\n    }\n    return field.errorElements = [errorClassElement, errorTextElement]\n  }\n\n  function _showError(field) {\n    let errorElements = _getErrorElements(field);\n    let errorClassElement = errorElements[0], errorTextElement = errorElements[1];\n\n    const { input } = field;\n    const inputId = input.id || Math.floor(new Date().valueOf() * Math.random());\n    const errorId = `error-${inputId}`;\n\n    if (errorClassElement) {\n      //errorClassElement.classList.remove(self.config.successClass);\n      //errorClassElement.classList.add(self.config.errorClass);\n\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (sucCls.length) { sucCls.forEach((s) => errorClassElement.classList.remove(s)) };\n      if (errCls.length) { errCls.forEach((e) => errorClassElement.classList.add(e)) };\n      input.setAttribute('aria-describedby', errorId);\n      input.setAttribute('aria-invalid', 'true');\n    }\n    if (errorTextElement) {\n      errorTextElement.setAttribute('id', errorId);\n      errorTextElement.setAttribute('role', 'alert');\n      errorTextElement.innerHTML = field.errors.join('<br/>');\n      errorTextElement.style.display = errorTextElement.pristineDisplay || '';\n    }\n  }\n\n  /***\n   * Adds error to a specific field\n   * @param input\n   * @param error\n   */\n  self.addError = function(input, error) {\n    input = input.length ? input[0] : input;\n    input.pristine.errors.push(error);\n    _showError(input.pristine);\n  };\n\n  function _removeError(field) {\n    let errorElements = _getErrorElements(field);\n    let errorClassElement = errorElements[0], errorTextElement = errorElements[1];\n    const { input } = field\n\n    if (errorClassElement) {\n      // IE > 9 doesn't support multiple class removal\n      // errorClassElement.classList.remove(self.config.errorClass);\n      // errorClassElement.classList.remove(self.config.successClass);\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (errCls.length) { errCls.forEach((e) => errorClassElement.classList.remove(e)) };\n      if (sucCls.length) { sucCls.forEach((s) => errorClassElement.classList.remove(s)) };\n      input.removeAttribute('aria-describedby');\n      input.removeAttribute('aria-invalid');\n    }\n    if (errorTextElement) {\n      errorTextElement.removeAttribute('id');\n      errorTextElement.removeAttribute('role');\n      errorTextElement.innerHTML = '';\n      errorTextElement.style.display = 'none';\n    }\n    return errorElements;\n  }\n\n  function _showSuccess(field) {\n    let errorClassElement = _removeError(field)[0];\n    //errorClassElement && errorClassElement.classList.add(self.config.successClass);\n    let sucCls = createClassArray(self.config.successClass);\n    if (sucCls.length) { errorClassElement && sucCls.forEach((s) => errorClassElement.classList.add(s)) };\n  }\n\n  /***\n   * Resets the errors\n   */\n  self.reset = function() {\n    for (let i = 0; self.fields[i]; i++) {\n      self.fields[i].errorElements = null;\n    }\n    Array.from(self.form.querySelectorAll('.' + PRISTINE_ERROR)).map(function(elem) {\n      elem.parentNode.removeChild(elem);\n    });\n    Array.from(self.form.querySelectorAll('.' + self.config.classTo)).map(function(elem) {\n      // elem.classList.remove(self.config.successClass);\n      // elem.classList.remove(self.config.errorClass);\n      let errCls = createClassArray(self.config.errorClass);\n      let sucCls = createClassArray(self.config.successClass);\n      if (errCls.length) { sucCls.forEach((s) => elem.classList.remove(s)) };\n      if (errCls.length) { errCls.forEach((e) => elem.classList.remove(e)) };\n    });\n\n\n  };\n\n  /***\n  * Convert the multiple classes into an array and remove spaces\n  * if the class string is empty array\n  */\n  function createClassArray(classString) {\n    let cls = classString.split(\" \").filter(e => e);\n    if (cls.length) return cls;\n    return ([]);\n  }\n\n  /***\n   * Resets the errors and deletes all pristine fields\n   */\n  self.destroy = function() {\n    self.reset();\n    self.fields.forEach(function(field) {\n      delete field.input.pristine;\n    });\n    self.fields = [];\n  };\n\n  self.setGlobalConfig = function(config) {\n    defaultConfig = config;\n  };\n\n  return self;\n\n}\n\n/***\n *\n * @param name => Name of the global validator\n * @param fn => validator function\n * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n * so on are for the attribute values\n * @param priority => priority of the validator function, higher valued function gets called first.\n * @param halt => whether validation should stop for this field after current validation function\n */\nPristine.addValidator = function(name, fn, msg, priority, halt) {\n  _(name, { fn, msg, priority, halt });\n};\n\n/***\n *\n * @param name => Name of the global validator\n * @param fn => async validator function\n * @param msg => message to show when validation fails. Supports templating. ${0} for the input's value, ${1} and\n * so on are for the attribute values\n * @param priority => priority of the validator function, higher valued function gets called first.\n * @param halt => whether validation should stop for this field after current validation function\n */\nPristine.addAsyncValidator = function(name, fn, msg, priority, halt) {\n  _(name, { fn, msg, priority, halt });\n};\n\nPristine.addMessages = function(locale, messages) {\n  let langObj = lang.hasOwnProperty(locale) ? lang[locale] : lang[locale] = {};\n\n  Object.keys(messages).forEach(function(key, index) {\n    langObj[key] = messages[key];\n  });\n}\n\nPristine.setLocale = function(locale) {\n  currentLocale = locale;\n}\n", "export const lang = {\n  en: {\n    required: \"This field is required\",\n    email: \"This field requires a valid email address\",\n    number: \"This field requires a number\",\n    integer: \"This field requires an integer value\",\n    url: \"This field requires a valid website URL\",\n    tel: \"This field requires a valid telephone number\",\n    maxlength: \"This fields length must be < ${1}\",\n    minlength: \"This fields length must be > ${1}\",\n    min: \"Minimum value for this field is ${1}\",\n    max: \"Maximum value for this field is ${1}\",\n    pattern: \"Please match the requested format\",\n    equals: \"The two fields do not match\",\n    default: \"Please enter a correct value\"\n  }\n};\n", "export function findAncestor(el, cls) {\n  while ((el = el.parentElement) && !el.classList.contains(cls));\n  return el;\n}\n\nexport function tmpl(o) {\n  return this.replace(/\\${([^{}]*)}/g, (a, b) => arguments[b]);\n}\n\nexport function groupedElemCount(input) {\n  return input.pristine.self.form.querySelectorAll('input[name=\"' + input.getAttribute('name') + '\"]:checked').length;\n}\n\nexport function mergeConfig(obj1, obj2) {\n  for (let attr in obj2) {\n    if (!(attr in obj1)) {\n      obj1[attr] = obj2[attr];\n    }\n  }\n  return obj1;\n}\n\n"],
  "mappings": "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",
  "names": ["form", "config", "live"]
}
